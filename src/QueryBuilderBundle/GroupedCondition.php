<?php
/**
 * Created by PhpStorm.
 * User: canngo
 * Date: 8/18/18
 * Time: 2:47 PM
 */

namespace QueryBuilderBundle;



class GroupedCondition extends Condition {

    protected $grouped_conditions = array();

    public function __construct($field, $alias, $connect_type = QueryBuilderTool::CONNECT_AND) {
        $type = self::NO_TYPE;
        parent::__construct($type, $field, $alias, "", null, $connect_type); // TODO: Change the autogenerated stub
    }

    public function getCondition() {
        $condition_text = " (";
        /** @var $condition Condition */
        foreach($this->grouped_conditions as $cpt => $condition){
            if($cpt > 0) {
                $condition_text .= " $condition->connect_type ";
            }
            $condition_text .= $condition->getCondition();
        }
        $condition_text .= ") ";
        return $condition_text;
    }

    /**
     * Adds a condition to the grouped conditions
     *
     * @param Condition $condition
     * @return $this
     */
    public function addConditionToGroup(Condition $condition) {
        $this->grouped_conditions[] = $condition;
        return $this;
    }

    public function addGroupCondition($type, $field, $alias, $connect_type, $label = "", $value = null) {
        $this->addConditionToGroup(new Condition($type, $field, $alias, $label, $value, $connect_type));
        return $this;
    }

    /**
     * @return array Grouped conditions
     */
    public function getGroupedConditions() {
        return $this->grouped_conditions;
    }

    /**
     * @param array $grouped_conditions
     */
    public function setGroupedConditions($grouped_conditions) {
        $this->grouped_conditions = $grouped_conditions;
    }

}